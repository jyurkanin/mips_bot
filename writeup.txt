/*
 * Bad Idea. It was doing way too many switch_modes and wasting tons of paint.
 *
 
if(we are on our own tile){
      set sprint
}
else{ //tile is empty
      set paint
}
*/


if(got target){
       path to target
}

if(paint > 0){ //we have enough paint
         if(not on top of your own square){
               set_paint_mode
         }
}
else {
     request puzzle
     if(!got_target){
        set velocity to zero
     }   
}

if(time since last map update > 128){
        get new powerup map
        get closest powerup
        set target closest powerup

        get new arena map
}





//Bug Pathing. Turn right to get around things.
//bot velocity is either 0 or BOT_VELOCITY, a constant
void path_to_target(int tx , int ty){
     [pix_x, pix_y] = get_robot_position();
     x = (10*x) + 5
     y = (10*y) + 5

     dx = x - pix_x;
     dy = y - pix_y;
     hypot = sqrt(dx*dx + dy*dy)

     cos = dx / hypot;
     sin = dy / hypot;

     pix_test_x = cos*BOT_VELOCITY + pix_x
     pix_test_y = sin*BOT_VELOCITY + pix_y

     tile_test_x = (int) (pix_test_x / 10)
     tile_test_y = (int) (pix_test_y / 10)
     
     theta = atan(x - pix_x, y - pix_y);

//p control was a terrible fucking idea. Fuck you
//     curr_angle = get_current_angle();
//     theta = .9*curr_angle + .1*theta //this is actually proportional gain velocity control
     
     set_angle_control_absolute();
     set_angle(theta)
     
}

bonk_interrupt:
        turn right 37 degrees.

with no waiting between heading updates
1498067 cycles to powerup
617626 cycles to powerup
333382 cycles to powerup
